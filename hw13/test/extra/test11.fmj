// Depth First Search
public int main() {
    class c my_c;
    my_c = new c();
    my_c.dfs(8, 3);
    return 0;
}

public class c {
    int []a = {0, 0, 0, 0, 0, 0};
    int dep = 0;
    public int dfs(int n, int m) {
        int i = 0;
        if (n == 0 && m == 0) {
            while (i < this.dep) {
                putnum(this.a[i]);
                putch(32);
                i = i + 1;
            }
            putch(10);
            return 0;
        }
        if (n <= 0 || m == 0)
            return 0;
        this.dep = this.dep + 1;
        i = 1;
        while (i <= n) {
            this.a[this.dep - 1] = i;
            this.dfs(n - i, m - 1);
            i = i + 1;
        }
        this.dep = this.dep - 1;
        return 0;
    }
}

/*
1 1 6 
1 2 5 
1 3 4 
1 4 3 
1 5 2 
1 6 1 
2 1 5 
2 2 4 
2 3 3 
2 4 2 
2 5 1 
3 1 4 
3 2 3 
3 3 2 
3 4 1 
4 1 3 
4 2 2 
4 3 1 
5 1 2 
5 2 1 
6 1 1 
*/